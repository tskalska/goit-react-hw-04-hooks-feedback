{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.module.css","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.jsx","components/statistics/Statistics.jsx","components/section/Section.jsx","components/notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","buttonsContainer","map","option","type","onClick","Statistics","good","neutral","bad","total","resultsContainer","Math","round","Section","props","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,iBAAmB,4C,gBCArCD,EAAOC,QAAU,CAAC,iBAAmB,uC,+JCEtB,SAASC,EAAT,GAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAChD,OACI,qBAAKC,UAAWC,IAAOC,iBAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAAqBC,KAAK,SAASC,QAAS,WAAQP,EAAgBK,IAApE,SACIA,GADSA,Q,oBCWRG,MAff,YAA0C,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAASC,EAAK,EAALA,IAE5BC,EAAQH,EAAKE,EAAID,EAEvB,OACE,sBAAKT,UAAWC,IAAOW,iBAAvB,UACE,0CAAaJ,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KAAa,uBAC3B,uDAA0BE,KAAKC,MAAM,IAAOH,EAASH,GAArD,WCXS,SAASO,EAASC,GAC/B,OACE,gCACE,6BAAKA,EAAMC,QACX,8BAAMD,EAAME,cCJH,SAASC,EAAcH,GACpC,OACE,8BACE,+BAAOA,EAAMI,YCEJ,SAASC,IACtB,MAAsBC,mBAAS,GAA/B,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAoBF,mBAAS,GAA7B,mBAAOZ,EAAP,KAAYe,EAAZ,KAQA,OACE,gCACE,cAACV,EAAD,CAASE,MAAO,wBAAhB,SACE,cAACpB,EAAD,CACEC,QAAS,CAAC,OAAQ,MAAO,WACzBC,gBAXgB,SAAAK,GACP,SAAXA,GAAmBmB,EAAQf,EAAK,GACrB,QAAXJ,GAAkBqB,EAAOf,EAAI,GAClB,YAAXN,GAAsBoB,EAAWf,EAAQ,QAW1CD,EAAKE,EAAID,EAAQ,GAChB,cAACM,EAAD,CAASE,MAAO,aAAhB,SACE,cAAC,EAAD,CACIT,KAAMA,EACNC,QAASA,EACTC,IAAKA,MAIZF,EAAKE,EAAID,IAAU,GAClB,cAACM,EAAD,CAASE,MAAO,aAAhB,SACE,cAACE,EAAD,CACEC,QAAS,2BCjCrBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5d3bc139.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsContainer\":\"FeedbackOptions_buttonsContainer__2A49m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsContainer\":\"Statistics_resultsContainer__dSpHo\"};","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({options, onLeaveFeedback}) {\r\n  return (\r\n      <div className={styles.buttonsContainer}>\r\n        {options.map(option =>\r\n          <button key={option} type='button' onClick={() => { onLeaveFeedback(option) }}>\r\n            { option }\r\n          </button>\r\n        )}\r\n      </div>\r\n  )\r\n}","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({good, neutral, bad}){\r\n\r\n  const total = good+bad+neutral;\r\n\r\n  return (\r\n    <div className={styles.resultsContainer}>\r\n      <span>Good: {good}</span>\r\n      <span>Neutral: {neutral}</span>\r\n      <span>Bad: {bad}</span>\r\n      <span>Total: {total}</span><br/>\r\n      <span>Positive Feedback: {Math.round(100 / (total) * good)}%</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\nexport default function Section (props){\r\n  return (\r\n    <div>\r\n      <h2>{props.title}</h2>\r\n      <div>{props.children}</div>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Notification (props){\r\n  return (\r\n    <div>\r\n      <span>{props.message}</span>\r\n    </div>)\r\n}","import {useState} from 'react';\nimport './App.css'; \nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Statistics from './components/statistics/Statistics';\nimport Section from './components/section/Section';\nimport Notification from './components/notification/Notification';\n\nexport default function App(){\n  const [good, setGood]=useState(0);\n  const [neutral, setNeutral]=useState(0);\n  const [bad, setBad]=useState(0);\n\n  const onLeaveFeedback = option => {\n    if (option === 'good'){setGood(good+1)}\n    if (option === 'bad'){setBad(bad+1)}\n    if (option === 'neutral'){setNeutral(neutral+1)}\n  }\n\n  return (\n    <div>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions \n          options={['good', 'bad', 'neutral']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      {good+bad+neutral>0 &&\n        <Section title={'Statistics'}>\n          <Statistics\n              good={good} \n              neutral={neutral}\n              bad={bad}\n              />\n        </Section>\n      }\n      {good+bad+neutral===0 &&\n        <Section title={'Statistics'}>\n          <Notification \n            message={'No feedback given'}\n            />\n        </Section>\n      }\n    </div>\n  )\n\n\n\n        \n     \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}